{"version":3,"sources":["video.js","index.js"],"names":["Video","props","elementRef","useRef","console","log","id","stream","volumeValue","volume","current","srcObject","controls","className","ref","width","height","autoPlay","muted","playsInline","signalingKey","keyFromUrl","search","window","location","results","RegExp","exec","key","getKeyFromUrl","roomId","roomFromUrl","room","getRoomFromUrl","clientId","uuidv4","options","defaultOptions","App","localStream","state","playing","connected","gotRemoteStream","startVideo","bind","stopVideo","connect","disconnect","handleRoomChange","handleKeyChange","conn","remoteStream","this","e","preventDefault","warn","navigator","mediaDevices","getUserMedia","video","audio","then","setState","catch","err","error","getTracks","forEach","track","stop","AyameConnection","on","authzMetadata","handleDisconnect","a","target","value","onClick","disabled","type","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbccb0f0.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport './video.css';\n\n// ------ Video Component ------\n\nfunction Video(props) {\n  const elementRef = useRef(null);\n\n  console.log('Video rendering, id=%s', props.id);\n  const stream = props.stream;\n  let volumeValue = 0;\n  if (props.volume) {\n    volumeValue = props.volume;\n  }\n  if (elementRef.current) {\n    if (elementRef.current.srcObject === stream) {\n      console.log('same stream, so skip');\n    }\n    else {\n      elementRef.current.srcObject = stream;\n    }\n\n    elementRef.current.volume = volumeValue;\n  }\n  else {\n    console.log('ref.current NULL');\n  }\n\n  const controls = props.controls;\n  if (controls) {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline controls ></video>\n    );\n  }\n  else {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline ></video>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Video from './video'; // video.js\nimport { connection as AyameConnection, defaultOptions } from '@open-ayame/ayame-web-sdk';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './index.css';\n\n// ---- TODO -----\n//  - roomID (DONE:input, url)\n//  - signalingKey (DONE:input, url)\n//  - codec (video, audio)\n//  - DONE: button enable/disable control\n//  - DONE: github actions for deploy github pages\n//  - DONE: inline\n//  - DONE: volume\n//  - DONE: controls\n\n// ------ params -----\nconst signalingUrl = 'wss://ayame-lite.shiguredo.jp/signaling';\nlet signalingKey = null;\nconst keyFromUrl = getKeyFromUrl();\nif (keyFromUrl && (keyFromUrl !== '')) {\n  signalingKey = keyFromUrl;\n}\nlet roomId = 'mm-react-ayame-test';\nconst roomFromUrl = getRoomFromUrl();\nif (roomFromUrl && (roomFromUrl !== '')) {\n  roomId = roomFromUrl;\n}\n\nlet clientId = uuidv4(); // â‡¨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n//let videoCodec = null;\n//let audioCodec = null;\n//let signalingKey = null;\n\n// --- Ayame options ---\nconst options = defaultOptions;\noptions.clientId = clientId ? clientId : options.clientId;\n//if (signalingKey) {\n//  options.signalingKey = signalingKey;\n//}\n\n// ---- URL ----\nfunction getRoomFromUrl() {\n  const search = window.location.search;\n  const re = new RegExp('room=([^&=]+)');\n  const results = re.exec(search);\n  let room = '';\n  if (results) {\n    room = results[1];\n  }\n  return room;\n}\n\nfunction getKeyFromUrl() {\n  const search = window.location.search;\n  const re = new RegExp('key=([^&=]+)');\n  const results = re.exec(search);\n  let key = null;\n  if (results) {\n    key = results[1];\n  }\n  return key;\n}\n\n// ------ App class ------\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.localStream = null;\n    this.state = {\n      playing: false,\n      connected: false,\n      gotRemoteStream: false,\n      roomId: roomId,\n      signalingKey: signalingKey,\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.startVideo = this.startVideo.bind(this);\n    this.stopVideo = this.stopVideo.bind(this);\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.handleRoomChange = this.handleRoomChange.bind(this);\n    this.handleKeyChange = this.handleKeyChange.bind(this);\n\n    // -- Ayame connection --\n    this.conn = null;\n    this.remoteStream = null;\n  }\n\n  componentDidMount() {\n    console.log('App DidMound()');\n  }\n\n  componentWillUnmount() {\n    console.log('App WillUnmount()');\n    if (this.localStream) {\n      this.stopVideo();\n    }\n  }\n\n  // -----------\n\n  startVideo(e) {\n    e.preventDefault();\n    console.log('start Video');\n    if (this.localStream) {\n      console.warn('localVideo ALREADY started');\n      return;\n    }\n\n    const constraints = { video: true, audio: true };\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(stream => {\n        this.localStream = stream;\n        this.setState({ playing: true });\n      })\n      .catch(err => console.error('media ERROR:', err));\n  }\n\n  stopVideo(e) {\n    e.preventDefault();\n    console.log('stop Video');\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n      this.setState({ playing: false });\n    }\n  }\n\n  // -----------------\n  connect(e) {\n    e.preventDefault();\n    console.log('connect');\n\n    if (this.conn) {\n      console.warn('ALREADY connected');\n      return;\n    }\n\n    if (this.state.signalingKey && (this.state.signalingKey !== '')) {\n      options.signalingKey = this.state.signalingKey;\n    }\n\n    // (signalingUrl: string, roomId: string, options: ConnectionOptions, debug: boolean, isRelay: boolean)\n    console.log('connecting roomId=%s key=%s', this.state.roomId, options.signalingKey);\n    this.conn = AyameConnection(signalingUrl, this.state.roomId, options);\n    this.conn.on('open', ({ authzMetadata }) => console.log('auth:', authzMetadata));\n    this.conn.on('disconnect', (e) => {\n      console.log('disconnected:', e);\n      this.handleDisconnect();\n    });\n    this.conn.on('addstream', async (e) => {\n      console.log(e.stream);\n      this.remoteStream = e.stream;\n      this.setState({ gotRemoteStream: true });\n    });\n    this.conn.on('removestream', async (e) => {\n      console.log('removestream:', e);\n      this.remoteStream = null;\n      this.setState({ gotRemoteStream: false });\n    });\n    this.conn.connect(this.localStream)\n      .then(() => {\n        console.log('connected');\n        this.setState({ connected: true });\n      })\n      .catch(err => { console.error('connect ERROR:', err) });\n  }\n\n  disconnect(e) {\n    e.preventDefault();\n    console.log('disconnect');\n    this.handleDisconnect();\n  }\n\n  handleDisconnect() {\n    if (this.conn) {\n      this.conn.disconnect();\n      this.conn = null;\n    }\n\n    this.remoteStream = null;\n    this.setState({ connected: false, gotRemoteStream: false });\n  }\n\n  handleRoomChange(e) {\n    this.setState({ roomId: e.target.value });\n  }\n\n  handleKeyChange(e) {\n    this.setState({ signalingKey: e.target.value });\n  }\n\n  // -----------------\n  render() {\n    console.log('App render()');\n    return (\n      <div className=\"App\" >\n        React Ayame-Lite example<br />\n        <button onClick={this.startVideo} disabled={this.state.playing || this.state.connected}> Start Video</button >\n        <button onClick={this.stopVideo} disabled={!this.state.playing || this.state.connected}>Stop Video</button>\n        <br />\n        SignalingKey: <input id=\"signaling_key\" type=\"text\" value={this.state.signalingKey} onChange={this.handleKeyChange} disabled={this.state.connected}></input>\n        <br />\n        Room: <input id=\"room_id\" type=\"text\" value={this.state.roomId} onChange={this.handleRoomChange} disabled={this.state.connected}></input>\n        <button onClick={this.connect} disabled={this.state.connected || !this.state.playing}> Connect</button >\n        <button onClick={this.disconnect} disabled={!this.state.connected}>Disconnect</button>\n        <div className=\"VideoContainer\">\n          <Video id={\"local_video\"} width={\"160px\"} height={\"120px\"} stream={this.localStream}>\n          </Video>\n          <div className=\"RemoteContainer\">\n            <Video id={\"remote_video\"} width={\"320px\"} height={\"240px\"} volume={0.5} controls={true} stream={this.remoteStream}>\n            </Video>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\n// ====================== ReactDOM rendering ====================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}