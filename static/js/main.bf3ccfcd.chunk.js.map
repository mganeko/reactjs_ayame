{"version":3,"sources":["video.js","index.js"],"names":["Video","props","elementRef","useRef","console","log","id","stream","volumeValue","volume","current","srcObject","controls","className","ref","width","height","autoPlay","muted","playsInline","clientId","uuidv4","options","defaultOptions","App","localStream","state","playing","connected","gotRemoteStream","roomId","startVideo","bind","stopVideo","connect","disconnect","handleRoomChange","conn","remoteStream","this","e","preventDefault","warn","navigator","mediaDevices","getUserMedia","video","audio","then","setState","catch","err","error","getTracks","forEach","track","stop","AyameConnection","on","authzMetadata","handleDisconnect","a","target","value","onClick","disabled","type","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf3ccfcd.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport './video.css';\n\n// ------ Video Component ------\n\nfunction Video(props) {\n  const elementRef = useRef(null);\n\n  console.log('Video rendering, id=%s', props.id);\n  const stream = props.stream;\n  let volumeValue = 0;\n  if (props.volume) {\n    volumeValue = props.volume;\n  }\n  if (elementRef.current) {\n    if (elementRef.current.srcObject === stream) {\n      console.log('same stream, so skip');\n    }\n    else {\n      elementRef.current.srcObject = stream;\n    }\n\n    elementRef.current.volume = volumeValue;\n  }\n  else {\n    console.log('ref.current NULL');\n  }\n\n  const controls = props.controls;\n  if (controls) {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline controls ></video>\n    );\n  }\n  else {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline ></video>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Video from './video'; // video.js\nimport { connection as AyameConnection, defaultOptions } from '@open-ayame/ayame-web-sdk';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './index.css';\n\n// ---- TODO -----\n//  - DONE: roomID (input, url)\n//  - signalingKey (input, url)\n//  - codec (video, audio)\n//  - DONE: button enable/disable control\n//  - DONE: github actions for deploy github pages\n//  - DONE: inline\n//  - DONE: volume\n//  - DONE: controls\n\n// ------ params -----\nconst signalingUrl = 'wss://ayame-lite.shiguredo.jp/signaling';\nconst signalingKey = null;\nlet roomId = 'mm-react-ayame-test';\nlet clientId = uuidv4(); // â‡¨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n//let videoCodec = null;\n//let audioCodec = null;\n//let signalingKey = null;\n\n// --- Ayame options ---\nconst options = defaultOptions;\noptions.clientId = clientId ? clientId : options.clientId;\nif (signalingKey) {\n  options.signalingKey = signalingKey;\n}\n\n// ------ App class ------\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.localStream = null;\n    this.state = {\n      playing: false,\n      connected: false,\n      gotRemoteStream: false,\n      roomId: roomId,\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.startVideo = this.startVideo.bind(this);\n    this.stopVideo = this.stopVideo.bind(this);\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.handleRoomChange = this.handleRoomChange.bind(this);\n\n\n    // -- Ayame connection --\n    this.conn = null;\n    this.remoteStream = null;\n  }\n\n  componentDidMount() {\n    console.log('App DidMound()');\n  }\n\n  componentWillUnmount() {\n    console.log('App WillUnmount()');\n    if (this.localStream) {\n      this.stopVideo();\n    }\n  }\n\n  // -----------\n\n  startVideo(e) {\n    e.preventDefault();\n    console.log('start Video');\n    if (this.localStream) {\n      console.warn('localVideo ALREADY started');\n      return;\n    }\n\n    const constraints = { video: true, audio: true };\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(stream => {\n        this.localStream = stream;\n        this.setState({ playing: true });\n      })\n      .catch(err => console.error('media ERROR:', err));\n  }\n\n  stopVideo(e) {\n    e.preventDefault();\n    console.log('stop Video');\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n      this.setState({ playing: false });\n    }\n  }\n\n  // -----------------\n  connect(e) {\n    e.preventDefault();\n    console.log('connect');\n\n    if (this.conn) {\n      console.warn('ALREADY connected');\n      return;\n    }\n\n    // (signalingUrl: string, roomId: string, options: ConnectionOptions, debug: boolean, isRelay: boolean)\n    console.log('connecting roomId=%s', this.state.roomId);\n    this.conn = AyameConnection(signalingUrl, this.state.roomId, options);\n    this.conn.on('open', ({ authzMetadata }) => console.log('auth:', authzMetadata));\n    this.conn.on('disconnect', (e) => {\n      console.log('disconnected:', e);\n      this.handleDisconnect();\n    });\n    this.conn.on('addstream', async (e) => {\n      console.log(e.stream);\n      this.remoteStream = e.stream;\n      this.setState({ gotRemoteStream: true });\n    });\n    this.conn.on('removestream', async (e) => {\n      console.log('removestream:', e);\n      this.remoteStream = null;\n      this.setState({ gotRemoteStream: false });\n    });\n    this.conn.connect(this.localStream)\n      .then(() => {\n        console.log('connected');\n        this.setState({ connected: true });\n      })\n      .catch(err => { console.error('connect ERROR:', err) });\n  }\n\n  disconnect(e) {\n    e.preventDefault();\n    console.log('disconnect');\n    this.handleDisconnect();\n  }\n\n  handleDisconnect() {\n    if (this.conn) {\n      this.conn.disconnect();\n      this.conn = null;\n    }\n\n    this.remoteStream = null;\n    this.setState({ connected: false, gotRemoteStream: false });\n  }\n\n  handleRoomChange(e) {\n    this.setState({ roomId: e.target.value });\n  }\n\n  // -----------------\n  render() {\n    console.log('App render()');\n    return (\n      <div className=\"App\" >\n        React Ayame-Lite example<br />\n        <button onClick={this.startVideo} disabled={this.state.playing || this.state.connected}> Start Video</button >\n        <button onClick={this.stopVideo} disabled={!this.state.playing || this.state.connected}>Stop Video</button>\n        <br />\n        Room: <input id=\"room_id\" type=\"text\" value={this.state.roomId} onChange={this.handleRoomChange} disabled={this.state.connected}></input>\n        <button onClick={this.connect} disabled={this.state.connected || !this.state.playing}> Connect</button >\n        <button onClick={this.disconnect} disabled={!this.state.connected}>Disconnect</button>\n        <div className=\"VideoContainer\">\n          <Video id={\"local_video\"} width={\"160px\"} height={\"120px\"} stream={this.localStream}>\n          </Video>\n          <div className=\"RemoteContainer\">\n            <Video id={\"remote_video\"} width={\"320px\"} height={\"240px\"} volume={0.5} controls={true} stream={this.remoteStream}>\n            </Video>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\n// ====================== ReactDOM rendering ====================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}